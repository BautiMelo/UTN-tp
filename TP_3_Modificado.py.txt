class Ticket:
    def __init__(self, id, pat,  tp, fp, ps, dist):
        self.identificacion = id
        self.patente = pat
        self.tipo = tp
        self.pago = fp
        self.pais = ps
        self.distancia = dist

    def __str__(self):
        res = '\n Id: '+ str(self.identificacion)
        res += '- Patente: '+ str(self.patente)
        res += '- Tipo: '+ str(self.tipo)
        res += '- Pago: '+ str(self.pago)
        res += '- Pais: '+ str(self.pais)
        res += '- Distancia: '+ str(self.distancia)
        return res

def menu():
        print('1: Crear un arreglo de registros con tickets guardados')
        print('2: Cargar datos de nuevo ticket')
        print('3: Mostrar todos los tickets')
        print('4: Buscar una patente existente')
        print('5: Cambiar forma de pago de un vehiculo')
        print('6: Mostrar cantidad de vehiculos que pasaron por una cabina')
        print('7: Importe pagado por vehiculo')
        print('8: Mostrar vehiculo con mayor monto, y porcentaje del total')
        print('9: Calcular y mostrar la distancia promedio desde la Ãºltima cabina')
        selec = int(input('Elija entre las siguientes opciones:\n'))
        return selec

def cargar_entre(lim_inf, lim_sup, mensaje):
    num = int(input(mensaje))
    while num <= lim_inf or num >= lim_sup:
        print("Valor incorrecto!, cargue de nuevo")
        num = int(input(mensaje))
    return num

def procesar_linea (linea,v):
    id = linea [0:10]
    pat = linea [10:17]
    tp = linea [17:18]
    fp = linea [18:19]
    ps = linea [19:20]
    dist = int (linea [20:23])
    #return Ticket(id,pat,tp,fp,ps,dist)
    v.append(Ticket(id, pat,  tp, fp, ps, dist))

def cargar_vector(n,v):
    for i in range(n):
        id = cargar_entre(-1,10000000000,'Ingrese un codigo de identificacion de 10 digitos:')
        pat = str(input('Ingrese la patente del vehiculo:'))
        tp = cargar_entre(-1,3,"Ingrese el tipo de vehiculo:(0.Motocicleta 1.Automovil 2.Camion):")
        fp = cargar_entre(0,3,"Ingrese el metodo de pago: (1.Manual 2.Telepeaje):")
        ps = cargar_entre(-1,5,"Ingrese el pais donde se encuentra la cabina de peaje: (0.Argentina 1.Bolivia 2.Brasil 3.Paraguay 4.Uruguay):")
        dist = cargar_entre(-1,1000,'Ingrese la distancia recorrida desde la ultima casilla de peaje:')
        v.append(Ticket(id, pat,  tp, fp, ps, dist))

def ordenar_por_id(v):
    n = len(v)
    for i in range(n-1):
        for j in range(i + 1, n):
            if int(v[i].identificacion) > int(v[j].identificacion):
                v[i],v[j] = v[j],v[i]

def mostrar(v):
    ret = ''
    for i in range(len(v)):
        res = 'Id: '+ str(v[i].identificacion)
        res += '- Patente: '+ str(v[i].patente)
        origen,indice = procesar_patentes(v,i)
        res += '- Origen: '+ str(origen)
        res += '- Tipo: '+ str(v[i].tipo)
        res += '- Pago: '+ str(v[i].pago)
        res += '- Pais: '+ str(v[i].pais)
        res += '- Distancia: '+ str(v[i].distancia)
        ret += res +'\n'
    return ret

def procesar_patentes(v,i):
    letras = ("A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z")
    numeros = ("0", "1", "2", "3", "4", "5", "6", "7", "8", "9")
    vacio = (" ")
    patente = v[i].patente

    if (patente[0] in letras and patente[1] in letras and patente[2] in numeros and patente[3] in numeros and patente[4] in numeros and patente[5] in letras and patente[6] in letras):
        Origen = "Argentina"
        Indice = 0
        return Origen, Indice

    elif (patente[0] in letras and patente[1] in letras and patente[2] in letras and patente[3] in numeros and patente[4] in letras and patente[5] in numeros and patente[6] in numeros):
        Origen = "Brasil"
        Indice = 1
        return Origen, Indice

    elif(patente[0] in letras and patente[1] in letras and patente[2] in numeros and patente[3] in numeros and patente[4] in numeros and patente[5] in numeros and patente[6] in numeros):
        Origen = "Bolivia"
        Indice = 2
        return Origen, Indice

    elif(patente[0] in letras and patente[1] in letras and patente[2] in letras and patente[3] in letras and patente[4] in numeros and patente[5] in numeros and patente[6] in numeros):
        Origen = "Paraguay"
        Indice = 3
        return Origen, Indice

    elif(patente[0] in letras and patente[1] in letras and patente[2] in letras and patente[3] in numeros and patente[4] in numeros and patente[5] in numeros and patente[6] in numeros):
        Origen = "Uruguay"
        Indice = 4
        return Origen, Indice

    elif(patente[0] in vacio and patente[1] in letras and patente[2] in letras and patente[3] in letras and patente[4] in letras and patente[5] in numeros and patente[6] in numeros):
        Origen = "Chile"
        Indice = 5
        return Origen, Indice

    else:
        Origen = "Otro"
        Indice = 6
        return Origen, Indice

def buscar_por_patente(v,patente,cabina):
    for i in range(len(v)):
        if v[i].patente == patente.upper():
            if int(v[i].pais) == cabina:
                print("Vehiculo encontrado")
                return v[i]
    return None

def buscar_por_codigo(v,codigo):
    for i in range(len(v)):
        if int(v[i].identificacion) == codigo:
            if int(v[i].pago) == 1:
                v[i].pago = 2
                return v[i]

            if int(v[i].pago) == 2:
                v[i].pago = 1
                return v[i]
    return None

def mostrar_conteo(v):
        conteo = 7 * [0]
        for i in range(len(v)):
            origen,indice = procesar_patentes(v,i)
            conteo[indice] += 1
        print(f"Cantidad de veichulos de Argentina:{conteo[0]}")
        print(f"Cantidad de veichulos de Brasil:{conteo[1]}")
        print(f"Cantidad de veichulos de Bolivia:{conteo[2]}")
        print(f"Cantidad de veichulos de Paraguay:{conteo[3]}")
        print(f"Cantidad de veichulos de Uruguay:{conteo[4]}")
        print(f"Cantidad de veichulos de Chile:{conteo[5]}")
        print(f"Cantidad de veichulos de otro pais:{conteo[6]}\n")




